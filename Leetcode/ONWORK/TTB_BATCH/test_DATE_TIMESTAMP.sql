ALTER TABLE LOS_FAC ADD INTEGRATION_DATE_6 TIMESTAMP ; 

SELECT SYSDATE FROM DUAl ;

SELECT TRUNC(TO_DATE('27-OCT-92','DD-MON-YY'), 'YEAR') "New Year" FROM DUAL ; 

SELECT TRUNC(SYSDATE) FROM DUAL ;


SELECT * FROM  LOS_FAC WHERE INTEGRATION_DATE_2 IS NOT NULL; -- 15-JUL-19
--ID : 2019111400016870
--20160418014710
--20160418014712
--20160504014766

UPDATE LOS_FAC SET INTEGRATION_DATE_6 = CURRENT_TIMESTAMP WHERE ID = 2019111400016870 ;
commit ;

SELECT CURRENT_TIMESTAMP,SESSIONTIMEZONE FROM DUAL; --09-JAN-23 10.34.30.868000000 AM ASIA/BANGKOK

SELECT INTEGRATION_DATE_6,LOS_FAC.* FROM  LOS_FAC WHERE TRUNC(INTEGRATION_DATE_6) = TRUNC(SYSDATE);  -- WORK

SELECT ID, INTEGRATION_DATE_6 FROM  LOS_FAC WHERE ID = 2019111400016870;-- 15-JUL-19


INSERT INTO TABLE_NAME (TIMESTAMP_VALUE) VALUES (TO_TIMESTAMP('2014-07-02 06:14:00.742000000', 'YYYY-MM-DD HH24:MI:SS.FF'));

UPDATE LOS_FAC SET INTEGRATION_DATE_6 = TO_TIMESTAMP('2023-01-08 11:14:00.742000000', 'YYYY-MM-DD HH24:MI:SS.FF') WHERE ID = 20160418014710 ;
UPDATE LOS_FAC SET INTEGRATION_DATE_6 = TO_TIMESTAMP('2023-01-09 00:14:00.742000000', 'YYYY-MM-DD HH24:MI:SS.FF') WHERE ID = 20160418014712 ;
UPDATE LOS_FAC SET INTEGRATION_DATE_6 = TO_TIMESTAMP('2023-01-08 09:14:00.742000000', 'YYYY-MM-DD HH24:MI:SS.FF') WHERE ID = 20160504014766 ;
commit ;

--conclude: 
SELECT INTEGRATION_DATE_6,LOS_FAC.* FROM  LOS_FAC WHERE TRUNC(INTEGRATION_DATE_6) = TRUNC(SYSDATE);  -- WORK

--DB TEST on 1/9/23
SELECT * FROM LOS_FAC WHERE PROD_CODE IN ('HE07','HE08','HE09','HE10');

SELECT * FROM LOS_FAC WHERE CA_ID = 20160418011664 ;
SELECT * FROM LOS_CA WHERE ID = 20160418011664 ;

UPDATE LOS_FAC SET PROD_CODE = 'HE07' WHERE ID = 20160418014710;
UPDATE LOS_FAC SET PROD_CODE = 'HE06' WHERE ID = 20160418014712 ;
COMMIT;

UPDATE LOS_CA SET INTEGRATION_DATE_6 = CURRENT_TIMESTAMP, INTEGRATION_STS_6='DIRECTCREDIT_SUCCESS' WHERE ID = 20160418011664 ;
COMMIT;

ALTER TABLE LOS_REG_REQUEST ADD TOTAL_REVOLVING_CASHBACK_AMT NVARCHAR2(100) ;
ALTER TABLE LOS_CA ADD INTEGRATION_DATE_6 TIMESTAMP ;
ALTER TABLE LOS_CA ADD INTEGRATION_STS_6 VARCHAR(20) ;


CREATE OR REPLACE PROCEDURE GLBATCH
AS
    V_TOTALRECORD            NUMBER;

BEGIN

    EXECUTE IMMEDIATE 'TRUNCATE TABLE LOS_BATCH_GL_DETAIL';
    BEGIN

        INSERT INTO LOS_BATCH_GL_DETAIL(REC_INDICATOR, SOURCE_SYSTEM_CODE, EFFECTIVE_DATE, TRANSACTION_DATE , PRODUCT_CODE, ENTERED_AMOUNT , ACCOUNTED_AMOUNT , TRANSACTION_NO, ADDITIONAL_1)
        SELECT
          'D' AS REC_INDICATOR,
	      'RSL' AS SOURCE_SYSTEM_CODE ,
	      TO_CHAR(SYSDATE,'DDMMYY') , TO_CHAR(SYSDATE,'DDMMYY') ,
          (SELECT SERVICE_PROGRAM FROM LOS_FAC_PRC PRC WHERE PRC.FAC_ID = FAC.ID AND PRC.PRC_TYPE IS NULL AND ROWNUM = 1) AS PRODUCT_CODE,
          RR.TOTAL_REVOLVING_CASHBACK_AMT AS ENTERED_AMOUNT ,
          RR.TOTAL_REVOLVING_CASHBACK_AMT AS  ACCOUNTED_AMOUNT ,
	      fac.CA_ID AS TRANSACTION_NO,
          fac.HOST_ACCT_NO AS  ADDITIONAL_1
		FROM LOS_CA CA
	        LEFT JOIN LOS_FAC FAC ON CA.ID = FAC.CA_ID
            LEFT JOIN LOS_REG_REQUEST RR ON RR.CA_ID = CA.ID
            WHERE CA.INTEGRATION_STS_6 = 'DIRECTCREDIT_SUCCESS'
            AND FAC.PROD_CODE IN ('HE07','HE08','HE09','HE10')
            AND TRUNC(CA.INTEGRATION_DATE_6) = TRUNC(SYSDATE)
		ORDER BY CA.ID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
           NULL;
    END;

    --get total records
    SELECT COUNT(1) INTO V_TOTALRECORD FROM LOS_BATCH_GL_DETAIL;
    DBMS_OUTPUT.PUT_LINE( 'v_totalRecord=>'||V_TOTALRECORD);

    COMMIT;

END GLBATCH;
/

SELECT * FROM LOS_BATCH_GL_DETAIL;

BEGIN
    GLBATCH;
END;